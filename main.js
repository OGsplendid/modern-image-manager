!function(){"use strict";class e{constructor(e){this.element=e,this.count=0,this.urlList=[],this.onCloseBtnClick=this.onCloseBtnClick.bind(this),this.element.addEventListener("click",this.onCloseBtnClick)}static createLi(e,t){return`\n      <li class="img-item">\n      <img src="${t}" class="img">\n        <div class="close-button">X</div>\n        <span class="img-discription">${e}</span>\n      </li>\n    `}addToArray(e){this.urlList.push(e)}clear(){this.element.querySelectorAll(".img-item").forEach((e=>e.remove()))}render(){this.clear(),this.urlList.forEach((t=>{const i=e.createLi(t.description,t.url);this.element.insertAdjacentHTML("beforeend",i)}))}onCloseBtnClick(e){if(!e.target.classList.contains("close-button"))return;const t=e.target.closest(".img-item"),i=t.querySelector(".img").getAttribute("src"),n=this.urlList.findIndex((e=>e.url===i));this.urlList.splice(n,1),t.remove()}}class t{constructor(i){this.element=i,this.gallery=new e(document.querySelector(".bottom-container")),this.bottomContainer=document.querySelector(".bottom-container"),this.fileContainer=this.element.querySelector(".file-container"),this.fileInput=document.querySelector(".input"),this.onClick=this.onClick.bind(this),this.onChange=this.onChange.bind(this),this.onDrop=this.onDrop.bind(this),this.fileContainer.addEventListener("click",this.onClick),this.fileContainer.addEventListener("dragover",t.onDragover),this.fileContainer.addEventListener("drop",this.onDrop),this.fileInput.addEventListener("change",this.onChange)}static onDragover(e){e.preventDefault(),e.target.style.backgroundColor="purple",e.target.style.color="white"}onDrop(e){e.preventDefault();const t=e.dataTransfer.files&&e.dataTransfer.files[0],i=new FileReader;i.addEventListener("load",(e=>{const i={url:e.target.result,description:t.name};this.gallery.addToArray(i),this.gallery.render()})),i.readAsDataURL(t),e.target.style.backgroundColor="white",e.target.style.color="black"}onChange(e){const t=this.fileInput.files&&this.fileInput.files[0];if(!t)return;const i=new FileReader;i.addEventListener("load",(e=>{const i={url:e.target.result,description:t.name};this.gallery.addToArray(i),this.gallery.render()})),i.readAsDataURL(t)}onClick(e){this.fileInput.dispatchEvent(new MouseEvent("click"))}}new t(document.querySelector(".top-container"))}();
//# sourceMappingURL=main.js.map